#ifndef ${header_guard}
#define ${header_guard}

#include "global-defines.h"
#include "fraction-base.h"

class ${fraction_cell_classname};

typedef FractionCellBase<${fractions_enum_element},
                     SPACE_COORDS_COUNT,
                     ${coordinates_enum_prefix}COUNT,
                     ${quantities_enum_prefix}COUNT,
                     ${fraction_cell_classname}>       ${fraction_cell_base_classname};

typedef FractionSpaceBase<FRACTION1_COORDS_COUNT, ${fraction_cell_classname}> ${fraction_space_base_classname};

class ${fraction_cell_classname} : public ${fraction_cell_base_classname}
{
public:
    virtual ~${fraction_cell_classname}() { }
    virtual void calculateDerivatives();
    virtual void calculateSourceEvolution(double dt);
    
protected:
    double getSpaceDiffusionCoefficient(uint quantity, uint axisIndex);
    
private:
    void* getModel();
};

class ${fraction_space_classname} : public ${fraction_space_base_classname}
{
public:
    ${fraction_space_classname}(FractionsPool* parentFractionsPool);
    virtual ~${fraction_space_classname}() { }
    
private:
};

#endif // ${header_guard}
