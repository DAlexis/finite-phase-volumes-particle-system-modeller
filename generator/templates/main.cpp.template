#include "model.h"
#include "grid-template.h"

#include <iostream>

unsigned int threadsCount = ${threads_count};
double timeStep = ${time_step};
double stopTime = ${stop_time};

int main()
{
    using namespace std;
    Model *model;
    try {
        cout << "Model initialisation... ";
        model = new Model;
        cout << "Will be used " << threadsCount << " threads." << endl;
        model->setThreadsCount(threadsCount);
        cout << "Initialisation done." << endl;
    }
    catch (const exception& ex) {
        cout << endl << "Exception handled during model initialisation: " << ex.what();
        return EXIT_FAILURE;
    }
    
    try {
        cout << "Starting modelling with time from 0 to " << stopTime << ":" << endl;
        model->run(stopTime, timeStep);
        cout << "Modelling done." << endl;
    }
    catch (const exception& ex) {
        cout << "Exception handled during modelling: " << ex.what();
        return EXIT_FAILURE;
    }
    
    delete model;
    return EXIT_SUCCESS;
}
